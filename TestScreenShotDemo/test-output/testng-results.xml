<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="22" passed="22">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="1962870" started-at="2020-12-03T05:57:54Z" finished-at="2020-12-03T06:30:37Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="1962870" started-at="2020-12-03T05:57:54Z" finished-at="2020-12-03T06:30:37Z">
      <class name="ExtentReport.ExtentReportsClass">
        <test-method status="PASS" signature="startReport()[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="startReport" is-config="true" duration-ms="448" started-at="2020-12-03T11:27:54Z" finished-at="2020-12-03T11:27:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="PaladionNetworksWithAzureAndOffice365(java.lang.String, java.lang.String)[pri:1, instance:ExtentReport.ExtentReportsClass@91161c7]" name="PaladionNetworksWithAzureAndOffice365" duration-ms="99122" started-at="2020-12-03T11:27:56Z" data-provider="paladionNetworksWithO365Data" finished-at="2020-12-03T11:29:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://palmdrsa-rvkpxf73t5m64.eastus.cloudapp.azure.com:8080/nifi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PaladionNetworksWithAzure AndOffice 365]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PaladionNetworksWithAzureAndOffice365 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="8" started-at="2020-12-03T11:29:35Z" finished-at="2020-12-03T11:29:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PaladionNetworksWithAzureAndOffice365 status=SUCCESS method=ExtentReportsClass.PaladionNetworksWithAzureAndOffice365(java.lang.String, java.lang.String)[pri:1, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="paladionNetworksWithAws(java.lang.String, java.lang.String)[pri:2, instance:ExtentReport.ExtentReportsClass@91161c7]" name="paladionNetworksWithAws" duration-ms="94678" started-at="2020-12-03T11:29:35Z" data-provider="paladionNetworkswithAws" finished-at="2020-12-03T11:31:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://18.222.5.148:9090/nifi/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Paladion Networks with AWS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paladionNetworksWithAws -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="1" started-at="2020-12-03T11:31:10Z" finished-at="2020-12-03T11:31:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paladionNetworksWithAws status=SUCCESS method=ExtentReportsClass.paladionNetworksWithAws(java.lang.String, java.lang.String)[pri:2, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="paladionNetworksWithAzure(java.lang.String, java.lang.String)[pri:2, instance:ExtentReport.ExtentReportsClass@91161c7]" name="paladionNetworksWithAzure" duration-ms="69446" started-at="2020-12-03T11:31:10Z" data-provider="paladionNetworksAzure" finished-at="2020-12-03T11:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://palmdrsa-3263t7bgjnuku.eastus.cloudapp.azure.com:8080/nifi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Paladion Networks With Azure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paladionNetworksWithAzure -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="2" started-at="2020-12-03T11:32:20Z" finished-at="2020-12-03T11:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paladionNetworksWithAzure status=SUCCESS method=ExtentReportsClass.paladionNetworksWithAzure(java.lang.String, java.lang.String)[pri:2, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="UPL(java.lang.String, java.lang.String)[pri:3, instance:ExtentReport.ExtentReportsClass@91161c7]" name="UPL" duration-ms="13470" started-at="2020-12-03T11:32:20Z" data-provider="uplData" finished-at="2020-12-03T11:32:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://palmdrsa-ll42hvde4ghfu.southindia.cloudapp.azure.com:8080/nifi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[UPL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UPL -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="1" started-at="2020-12-03T11:32:34Z" finished-at="2020-12-03T11:32:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UPL status=SUCCESS method=ExtentReportsClass.UPL(java.lang.String, java.lang.String)[pri:3, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="AlMuhaidib(java.lang.String, java.lang.String)[pri:4, instance:ExtentReport.ExtentReportsClass@91161c7]" name="AlMuhaidib" duration-ms="95838" started-at="2020-12-03T11:32:34Z" data-provider="AlMuhaidib" finished-at="2020-12-03T11:34:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://52.66.214.173:9090/nifi/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Al Muhaidib]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AlMuhaidib -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="1" started-at="2020-12-03T11:34:10Z" finished-at="2020-12-03T11:34:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AlMuhaidib status=SUCCESS method=ExtentReportsClass.AlMuhaidib(java.lang.String, java.lang.String)[pri:4, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="goDigitWithAWS(java.lang.String, java.lang.String)[pri:5, instance:ExtentReport.ExtentReportsClass@91161c7]" name="goDigitWithAWS" duration-ms="95204" started-at="2020-12-03T11:34:10Z" data-provider="goDigitData" finished-at="2020-12-03T11:35:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://13.127.231.73:9090/nifi/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GoDigitAws]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goDigitWithAWS -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="1" started-at="2020-12-03T11:35:46Z" finished-at="2020-12-03T11:35:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=goDigitWithAWS status=SUCCESS method=ExtentReportsClass.goDigitWithAWS(java.lang.String, java.lang.String)[pri:5, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="ASG(java.lang.String, java.lang.String)[pri:6, instance:ExtentReport.ExtentReportsClass@91161c7]" name="ASG" duration-ms="96167" started-at="2020-12-03T11:35:46Z" data-provider="ASGData" finished-at="2020-12-03T11:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://3.235.232.107:9090/nifi/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ASG]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ASG -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="1" started-at="2020-12-03T11:37:22Z" finished-at="2020-12-03T11:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ASG status=SUCCESS method=ExtentReportsClass.ASG(java.lang.String, java.lang.String)[pri:6, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="spiGlobalAzureAndOffice365(java.lang.String, java.lang.String)[pri:7, instance:ExtentReport.ExtentReportsClass@91161c7]" name="spiGlobalAzureAndOffice365" duration-ms="95919" started-at="2020-12-03T11:37:22Z" data-provider="SPIGlobal" finished-at="2020-12-03T11:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://palmdrsa-jfyn7m2xkd4py.southindia.cloudapp.azure.com:8080/nifi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SPI globalAzureAndOffice365]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spiGlobalAzureAndOffice365 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="1" started-at="2020-12-03T11:38:58Z" finished-at="2020-12-03T11:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=spiGlobalAzureAndOffice365 status=SUCCESS method=ExtentReportsClass.spiGlobalAzureAndOffice365(java.lang.String, java.lang.String)[pri:7, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="TrainzWithAzure(java.lang.String, java.lang.String)[pri:8, instance:ExtentReport.ExtentReportsClass@91161c7]" name="TrainzWithAzure" duration-ms="96828" started-at="2020-12-03T11:38:59Z" data-provider="Trainz" finished-at="2020-12-03T11:40:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://palmdrsa-tbyudjcdnr7s4.southeastasia.cloudapp.azure.com:8080/nifi/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Trainz]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TrainzWithAzure -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="6" started-at="2020-12-03T11:40:36Z" finished-at="2020-12-03T11:40:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TrainzWithAzure status=SUCCESS method=ExtentReportsClass.TrainzWithAzure(java.lang.String, java.lang.String)[pri:8, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="SPIGlobalWithAWS(java.lang.String, java.lang.String)[pri:9, instance:ExtentReport.ExtentReportsClass@91161c7]" name="SPIGlobalWithAWS" duration-ms="93963" started-at="2020-12-03T11:40:36Z" data-provider="SPIGlobalWithAWS" finished-at="2020-12-03T11:42:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://52.66.214.173:9090/nifi/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SPI global1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SPIGlobalWithAWS -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="3" started-at="2020-12-03T11:42:10Z" finished-at="2020-12-03T11:42:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SPIGlobalWithAWS status=SUCCESS method=ExtentReportsClass.SPIGlobalWithAWS(java.lang.String, java.lang.String)[pri:9, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="UNICOIL(java.lang.String, java.lang.String)[pri:11, instance:ExtentReport.ExtentReportsClass@91161c7]" name="UNICOIL" duration-ms="95791" started-at="2020-12-03T11:42:10Z" data-provider="UNICOIL" finished-at="2020-12-03T11:43:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://52.142.161.183:8080/nifi/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[UNICOIL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UNICOIL -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="0" started-at="2020-12-03T11:43:46Z" finished-at="2020-12-03T11:43:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UNICOIL status=SUCCESS method=ExtentReportsClass.UNICOIL(java.lang.String, java.lang.String)[pri:11, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="UtkarshBank(java.lang.String, java.lang.String)[pri:13, instance:ExtentReport.ExtentReportsClass@91161c7]" name="UtkarshBank" duration-ms="61940" started-at="2020-12-03T11:43:46Z" data-provider="UtkarshBank" finished-at="2020-12-03T11:44:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://palmdrsa-awwrzsjujryg4.centralindia.cloudapp.azure.com:8080/nifi/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Utkarsh Bank]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UtkarshBank -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="1" started-at="2020-12-03T11:44:48Z" finished-at="2020-12-03T11:44:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UtkarshBank status=SUCCESS method=ExtentReportsClass.UtkarshBank(java.lang.String, java.lang.String)[pri:13, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="commonsaaslecind(java.lang.String, java.lang.String)[pri:14, instance:ExtentReport.ExtentReportsClass@91161c7]" name="commonsaaslecind" duration-ms="92115" started-at="2020-12-03T11:44:49Z" data-provider="commonsaaslecind" finished-at="2020-12-03T11:46:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://commonsaaslecind.southindia.cloudapp.azure.com:9090/nifi/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Trianz,ACGWorld,Utkarsh Bank,ThomasCook]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commonsaaslecind -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="2" started-at="2020-12-03T11:46:21Z" finished-at="2020-12-03T11:46:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=commonsaaslecind status=SUCCESS method=ExtentReportsClass.commonsaaslecind(java.lang.String, java.lang.String)[pri:14, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="ThomasCook(java.lang.String, java.lang.String)[pri:15, instance:ExtentReport.ExtentReportsClass@91161c7]" name="ThomasCook" duration-ms="90561" started-at="2020-12-03T11:46:21Z" data-provider="ThomasCookData" finished-at="2020-12-03T11:47:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://3.6.90.3:9090/nifi/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ThomasCook]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ThomasCook -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="2" started-at="2020-12-03T11:47:51Z" finished-at="2020-12-03T11:47:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ThomasCook status=SUCCESS method=ExtentReportsClass.ThomasCook(java.lang.String, java.lang.String)[pri:15, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="GoDigitAzureAndOffice365(java.lang.String, java.lang.String)[pri:16, instance:ExtentReport.ExtentReportsClass@91161c7]" name="GoDigitAzureAndOffice365" duration-ms="107593" started-at="2020-12-03T11:47:52Z" data-provider="GoDigitAzureAndOffice365" finished-at="2020-12-03T11:49:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://palmdrsa-ithy3fa7c3hmo.eastus2.cloudapp.azure.com:8080/nifi/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GoDigit1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoDigitAzureAndOffice365 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="0" started-at="2020-12-03T11:49:39Z" finished-at="2020-12-03T11:49:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GoDigitAzureAndOffice365 status=SUCCESS method=ExtentReportsClass.GoDigitAzureAndOffice365(java.lang.String, java.lang.String)[pri:16, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="commonsaaslecwipfli(java.lang.String, java.lang.String)[pri:17, instance:ExtentReport.ExtentReportsClass@91161c7]" name="commonsaaslecwipfli" duration-ms="96338" started-at="2020-12-03T11:49:39Z" data-provider="commonsaaslecwipfli" finished-at="2020-12-03T11:51:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://commonsaaslecwipfli.eastus2.cloudapp.azure.com:9090/nifi/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FRIESFINANCIAL,BOERKECOMPANY,CTI_Papers,LHDMD,LSBLACK,TOMCINMETAL,STRESAULAB,National Mail,WIPFLIINDIA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commonsaaslecwipfli -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="2" started-at="2020-12-03T11:51:16Z" finished-at="2020-12-03T11:51:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=commonsaaslecwipfli status=SUCCESS method=ExtentReportsClass.commonsaaslecwipfli(java.lang.String, java.lang.String)[pri:17, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="MCGUIRE(java.lang.String, java.lang.String)[pri:18, instance:ExtentReport.ExtentReportsClass@91161c7]" name="MCGUIRE" duration-ms="98367" started-at="2020-12-03T11:51:16Z" data-provider="MCGUIREData" finished-at="2020-12-03T11:52:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://palmdrsa-ithy3fa7c3hmo.eastus2.cloudapp.azure.com:8080/nifi/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[MCGUIRE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MCGUIRE -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="1" started-at="2020-12-03T11:52:54Z" finished-at="2020-12-03T11:52:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MCGUIRE status=SUCCESS method=ExtentReportsClass.MCGUIRE(java.lang.String, java.lang.String)[pri:18, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="WipfliLLPWithAzureAndO365(java.lang.String, java.lang.String)[pri:19, instance:ExtentReport.ExtentReportsClass@91161c7]" name="WipfliLLPWithAzureAndO365" duration-ms="66518" started-at="2020-12-03T11:52:54Z" data-provider="WipfliLLPData" finished-at="2020-12-03T11:54:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://palmdrsa-nt7uozdylobzg.eastus.cloudapp.azure.com:8080/nifi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Wipfli LLP]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WipfliLLPWithAzureAndO365 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="1" started-at="2020-12-03T11:54:01Z" finished-at="2020-12-03T11:54:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WipfliLLPWithAzureAndO365 status=SUCCESS method=ExtentReportsClass.WipfliLLPWithAzureAndO365(java.lang.String, java.lang.String)[pri:19, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="HPG(java.lang.String, java.lang.String)[pri:20, instance:ExtentReport.ExtentReportsClass@91161c7]" name="HPG" duration-ms="102481" started-at="2020-12-03T11:54:01Z" data-provider="HPGData" finished-at="2020-12-03T11:55:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://palmdrsa-sxsxigpx4yj4k.westus.cloudapp.azure.com:8080/nifi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[HPG]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HPG -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="7" started-at="2020-12-03T11:55:44Z" finished-at="2020-12-03T11:55:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HPG status=SUCCESS method=ExtentReportsClass.HPG(java.lang.String, java.lang.String)[pri:20, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="commonsaaslecusa(java.lang.String, java.lang.String)[pri:21, instance:ExtentReport.ExtentReportsClass@91161c7]" name="commonsaaslecusa" duration-ms="95321" started-at="2020-12-03T11:55:44Z" data-provider="commonsaaslecusa" finished-at="2020-12-03T11:57:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://commonsaaslecusa.westus.cloudapp.azure.com:9090/nifi/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TAC Sea Island,TAC Walden,Security Alliance,Digital River,PMCGroup,Wipfli LLP,NVR,Wipfli LLP,
Crown]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commonsaaslecusa -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="1" started-at="2020-12-03T11:57:19Z" finished-at="2020-12-03T11:57:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=commonsaaslecusa status=SUCCESS method=ExtentReportsClass.commonsaaslecusa(java.lang.String, java.lang.String)[pri:21, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="commonsaaslecpocusa(java.lang.String, java.lang.String)[pri:22, instance:ExtentReport.ExtentReportsClass@91161c7]" name="commonsaaslecpocusa" duration-ms="96513" started-at="2020-12-03T11:57:20Z" data-provider="commonsaaslecpocusa" finished-at="2020-12-03T11:58:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://commonsaaslecpocusa.westus.cloudapp.azure.com:9090/nifi/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[commonsaaslecpocusa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commonsaaslecpocusa -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="1" started-at="2020-12-03T11:58:56Z" finished-at="2020-12-03T11:58:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=commonsaaslecpocusa status=SUCCESS method=ExtentReportsClass.commonsaaslecpocusa(java.lang.String, java.lang.String)[pri:22, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="mdrazcentrallec(java.lang.String, java.lang.String)[pri:22, instance:ExtentReport.ExtentReportsClass@91161c7]" name="mdrazcentrallec" duration-ms="98326" started-at="2020-12-03T11:58:56Z" data-provider="mdrazcentrallec" finished-at="2020-12-03T12:00:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://mdrazcentrallec.westus.cloudapp.azure.com:9090/nifi/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mdrazcentrallec]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mdrazcentrallec -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="getResult" is-config="true" duration-ms="1" started-at="2020-12-03T12:00:35Z" finished-at="2020-12-03T12:00:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mdrazcentrallec status=SUCCESS method=ExtentReportsClass.mdrazcentrallec(java.lang.String, java.lang.String)[pri:22, instance:ExtentReport.ExtentReportsClass@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:ExtentReport.ExtentReportsClass@91161c7]" name="endReport" is-config="true" duration-ms="1874" started-at="2020-12-03T12:00:35Z" finished-at="2020-12-03T12:00:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- ExtentReport.ExtentReportsClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
